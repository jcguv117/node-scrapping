

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scraping App</title>
    <link rel="stylesheet" href="./css/styles.css">
</head>
<body>
    <h1>Generar tabla de información del Tipo de Cambio</h1>
    <div class="container">
        <div>
            <div>
                <span>Valor del tipo de cambio hoy: </span>
                <strong>$ <%= tcValue %></strong>
            </div>
        </div>
        <form action="/pdf" method="POST" onSubmit="return validateDates()" target="_blank">
            <div>
                <label for="dateStart">Fecha Inicial</label>
                <input type="date" id="dateStart" name="dateStart" value="">
            </div>
            <div>
                <label for="dateEnd">Fecha Final</label>
                <input type="date" id="dateEnd" name="dateEnd" value="">
            </div>
            <button type="submit">Generar PDF</button>
        </form>
    </div>
    <div>
        <p>
            La plataforma ofrece una herramienta sencilla para la obtención de información actualizada sobre los tipos de cambio publicados por el <b>Banco de México</b>. A través del formulario, puedes generar automáticamente un archivo PDF con los datos más recientes, extraídos directamente de la página fuente. 
        </p>
        <p>
            La información se extrae directamente de la página oficial del Banco de México, disponible en: <a href="<%= url %>" target="_blank">https://www.banxico.org.mx</a>, lo que garantiza la precisión y validez de los datos proporcionados.
        </p>
    </div>

    <script>
        function validateDates() {
            let dateStart = document.getElementById('dateStart').value;
            let dateEnd = document.getElementById('dateEnd').value;

            // Validar valores vacios
            if (!dateStart || !dateEnd) {
                alert("Las fechas no pueden estar vacías.");
                return false;
            }

            let start   = new Date(dateStart);
            let end     = new Date(dateEnd);

            // Validar que las fechas sean válidas
            if (isNaN(start.getTime()) || isNaN(end.getTime())) {
                alert("Por favor ingresa fechas válidas.");
                return false;
            }

            // Verificar que la fecha inicial no sea mayor que la fecha final
            if (start > end) {
                alert("La fecha inicial no puede ser mayor que la fecha final.");
                return false;
            }

            return true;
        }

        function setDefaultDate(element, date) {
            element.value = date;
        }

        function addDatePicker(element) {
            element.addEventListener('click', function() {
                this.showPicker();
            });
        } 

        function formattedDate(date) {
            const year  = date.getFullYear();
            const month = String(date.getMonth() + 1).padStart(2, '0');
            const day   = String(date.getDate()).padStart(2, '0');
            return `${year}-${month}-${day}`;
        } 

        function init() {
            const currentDate = formattedDate(new Date())

            let elements = [
                document.getElementById('dateStart'),
                document.getElementById('dateEnd')
            ]

            elements.forEach(element => {
                setDefaultDate(element, currentDate);
                addDatePicker(element);
            });
        }

        init();

    </script>
</body>
</html>